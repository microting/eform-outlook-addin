{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/crane/crane.component.html","webpack:///./src/app/crane/crane.component.ts","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/service/data.ts","webpack:///./src/app/service/i18n.ts","webpack:///./src/app/service/mock-data.ts","webpack:///./src/app/service/state.service.ts","webpack:///./src/app/service/state.ts","webpack:///./src/app/water/water.component.html","webpack:///./src/app/water/water.component.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"rxjs\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { EditComponent } from './edit/edit.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/main', pathMatch: 'full' },\n  { path: 'main', component: MainComponent },\n  { path: 'edit', component: EditComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppRoutingModule }     from './app-routing.module';\n\nimport { AppComponent }         from './app.component';\n\nimport { PLATFORM_ID, APP_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { MainComponent } from './main/main.component';\nimport { EditComponent } from './edit/edit.component';\nimport { CraneComponent } from './crane/crane.component';\nimport { WaterComponent } from './water/water.component';\n\nimport { DataService } from './service/data.service';\nimport { StateService } from './service/state.service';\n\n\n@NgModule({\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'eform' }),\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [\n    AppComponent,\n    MainComponent,\n    EditComponent,\n    CraneComponent,\n    WaterComponent\n  ],\n  providers: [ DataService, StateService ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(APP_ID) private appId: string) {\n    const platform = isPlatformBrowser(platformId) ?\n      'in the browser' : 'on the server';\n    console.log(`Running ${platform} with appId=${appId}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    ModuleMapLoaderModule\n  ],\n  providers: [\n    // Add universal-only providers here\n  ],\n  bootstrap: [ AppComponent ],\n})\nexport class AppServerModule {}\n","<div class='section' *ngIf=\"state\">\n  <div class='section-header'>\n    <label>{{this.content.ship.label}}</label>\n    <div class='padding'></div>\n    <div class='link'>{{this.content.ship.label_edit}}</div>\n    <div class='link'>{{this.content.ship.label_refresh}}</div>\n  </div>\n  <select [(ngModel)]='state.shipid' >\n      <option *ngFor='let optionItem of content.ship.value'\n          [ngValue]='optionItem.id' >{{optionItem.value}}</option>\n  </select>\n</div>\n<div class='section' *ngIf=\"state\">\n  <div class='section-header'>\n    <label>{{this.content.quay.label}}</label>\n    <div class='padding'></div>\n    <div class='link'>{{this.content.quay.label_edit}}</div>\n    <div class='link'>{{this.content.quay.label_refresh}}</div>\n  </div>\n  <select [(ngModel)]='state.quayid' >\n      <option *ngFor='let optionItem of content.quay.value'\n          [ngValue]='optionItem.id' >{{optionItem.value}}</option>\n  </select>\n</div>\n<div class='section' *ngIf=\"state\">\n  <div class='section-header'>\n    <label>{{this.content.crane.label}}</label>\n    <div class='padding'></div>\n    <div class='link'>{{this.content.crane.label_edit}}</div>\n    <div class='link'>{{this.content.crane.label_refresh}}</div>\n  </div>\n  <ul>\n      <li *ngFor='let radioItem of content.crane.value'\n          (click)='state.craneid = radioItem.id' >\n          <input type='radio' [value]='radioItem.id' [(ngModel)]='state.craneid'\n              >{{radioItem.value}}\n      </li>\n  </ul>\n</div>\n<div class='section' *ngIf=\"state\">\n  <div class='section-header'>\n    <label>{{this.content.workers.label}}</label>\n    <div class='padding'></div>\n    <div class='link'>{{this.content.workers.label_edit}}</div>\n    <div class='link'>{{this.content.workers.label_refresh}}</div>\n  </div>\n  <ul>\n      <li *ngFor='let checkItem of content.workers.value; index as i'\n          (click)='onWorkers(i)' >\n          <input type='checkbox' [(ngModel)]='state.workers[i]'\n              >{{checkItem.value}}\n      </li>\n  </ul>\n</div>\n<div class='section' *ngIf=\"state\">\n  <label>{{this.content.message.label}}</label>\n  <textarea [(ngModel)]='state.message' rows=\"8\" ></textarea>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { DataService } from '../service/data.service';\nimport { i18n } from '../service/i18n';\nimport { StateService } from '../service/state.service';\nimport { CraneState } from '../service/state';\n\n@Component({\n  selector: 'app-crane',\n  templateUrl: './crane.component.html',\n  styleUrls: ['./crane.component.css']\n})\nexport class CraneComponent implements OnInit {\n\n  content\n  uitext\n  state: CraneState\n\n  constructor(private _zone: NgZone, public _data: DataService, public _state: StateService) { }\n\n  ngOnInit() {\n    this.uitext = i18n.getTexts(this._state.state.locale)\n    this.getCrane()\n    this.getState()\n  }\n\n  getState(): void {\n    this._state.getCraneState().subscribe(cs => {this._zone.run(() => { this.state = cs }) })\n  }\n\n  getCrane(): void {\n    this._data.getCrane().subscribe(c => {\n      this._zone.run(() => {\n        this.content = {\n          ship: {\n            label: this.uitext.crane.label_ship,\n            label_edit: this.uitext.crane.label_edit,\n            label_refresh: this.uitext.crane.label_refresh,\n            value: c.ship\n          },\n          quay: {\n            label: this.uitext.crane.label_quay,\n            label_edit: this.uitext.crane.label_edit,\n            label_refresh: this.uitext.crane.label_refresh,\n            value: c.quay\n          },\n          crane: {\n            label: this.uitext.crane.label_crane,\n            label_edit: this.uitext.crane.label_edit,\n            label_refresh: this.uitext.crane.label_refresh,\n            value: c.crane\n          },\n          workers: {\n            label: this.uitext.crane.label_workers,\n            label_edit: this.uitext.crane.label_edit,\n            label_refresh: this.uitext.crane.label_refresh,\n            value: c.workers\n          },\n          message: {\n            label: this.uitext.crane.label_message,\n            value: c.message\n          }\n        }\n      })\n    })\n  }\n\n  onWorkers(workerIndex: number) {\n    this.state.workers[workerIndex] = !this.state.workers[workerIndex]\n  }\n}\n","<p>\n  edit works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class='main'>\n  <div class='header'>\n    <div class='section'>\n      <label>{{this.eform.label}}</label>\n      <select [(ngModel)]='state' >\n        <option *ngFor='let optionItem of eform.value'\n            [ngValue]='optionItem.value' >{{optionItem.label}}</option>\n      </select>\n    </div>\n  </div>\n  \n  <div class='content' *ngIf=\"state == 'crane'\">\n    <app-crane></app-crane>\n  </div>\n  <div class='content' *ngIf=\"state == 'water'\">\n    <app-water></app-water>\n  </div>\n\n  <div class='section'>\n    <div class='button' (click)='onInsert()'>Insert</div>\n  </div>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { DataService } from '../service/data.service';\nimport { i18n } from '../service/i18n';\nimport { StateService } from '../service/state.service';\nimport { CRANET, WATERT, CRANEID, WATERID } from '../service/state';\n\ndeclare const Office: any\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  eform: {\n    label: string\n    value: {label: string, value: (CRANET | WATERT)}[]\n  }\n  uitext\n  state: string\n\n  constructor(private zone: NgZone, public _data: DataService, public _state: StateService) { }\n\n  ngOnInit() {\n    this.uitext = i18n.getTexts(this._state.state.locale)\n    this.getEForm()\n    this.getState()\n  }\n\n  getEForm(): void {\n    this._data.getEform().subscribe(e => {\n      this.zone.run(() => {\n        console.log('main - eform changed')\n        console.log(e)\n        this.eform = {\n          label: this.uitext.eform.label_eform,\n          value: []\n        }\n        for ( let i = 0; i < e.length; i ++ ) {\n          const item = e[i]\n          this.eform.value.push({label: this.uitext.eform[item], value: item})\n        }\n      })\n    })\n  }\n\n  getState(): void {\n    this._state.getEState().subscribe(es => { this.zone.run(() => {this.state = es}) })\n  }\n\n  onInsert(): void {\n    let lang = this._state.state.locale\n    this.uitext = i18n.getTexts(lang)\n\n    let txt_subject = ''\n    let txt_body = ''\n    if ( this.state == CRANEID ) {\n      txt_subject = CRANEID\n      txt_body = this.uitext.eform.label_eform + ': ' + this.uitext.eform[CRANEID] + '<br>'\n\n      // crane - ship\n      for ( let i = 0; i < this._data.crane.ship.length; i ++ ) {\n        let shipitem = this._data.crane.ship[i]\n        if ( shipitem.id == this._state.state.crane.shipid ) {\n          txt_subject = txt_subject + ' - ' + shipitem.value\n          txt_body = txt_body + this.uitext.crane.label_ship + ': ' + shipitem.value + '<br>'\n          break\n        }\n      }\n\n      // crane - quay\n      for ( let i = 0; i < this._data.crane.quay.length; i ++ ) {\n        let quayitem = this._data.crane.quay[i]\n        if ( quayitem.id == this._state.state.crane.quayid ) {\n          txt_subject = txt_subject + ' - ' + quayitem.value\n          txt_body = txt_body + this.uitext.crane.label_quay + ': ' + quayitem.value + '<br>'\n          break\n        }\n      }\n\n      // crane - crane\n      for ( let i = 0; i < this._data.crane.crane.length; i ++ ) {\n        let craneitem = this._data.crane.crane[i]\n        if ( craneitem.id == this._state.state.crane.craneid ) {\n          txt_subject = txt_subject + ' - ' + craneitem.value\n          txt_body = txt_body + this.uitext.crane.label_crane + ': ' + craneitem.value + '<br>'\n          break\n        }\n      }\n\n      // crane - workers\n      let cworkers = []\n      for ( let i = 0; i < this._data.crane.workers.length; i ++ ) {\n        let worker = this._data.crane.workers[i]\n        if ( this._state.state.crane.workers[i] ) {\n          cworkers.push(worker.value)\n        }\n      }\n      txt_subject = txt_subject + ' - ' + cworkers.join(', ')\n      txt_body = txt_body + this.uitext.crane.label_workers + ': ' + cworkers.join(', ') + '<br>'\n\n      // crane - message\n      let txtVal = this._state.state.crane.message\n      txtVal = txtVal.replace(/\\r/g, '<br>')\n      txtVal = txtVal.replace(/\\n/g, '<br>')\n      txt_body = txt_body + this.uitext.crane.label_message + ': ' + txtVal\n\n    } else if ( this.state == WATERID ) {\n      txt_subject = WATERID\n      txt_body = this.uitext.eform.label_eform + ': ' + this.uitext.eform[WATERID] + '<br>'\n\n      // water - ship\n      for ( let i = 0; i < this._data.water.ship.length; i ++ ) {\n        let shipitem = this._data.water.ship[i]\n        if ( shipitem.id == this._state.state.water.shipid ) {\n          txt_subject = txt_subject + ' - ' + shipitem.value\n          txt_body = txt_body + this.uitext.water.label_ship + ': ' + shipitem.value + '<br>'\n          break\n        }\n      }\n\n      // water - quay\n      for ( let i = 0; i < this._data.water.quay.length; i ++ ) {\n        let quayitem = this._data.water.quay[i]\n        if ( quayitem.id == this._state.state.water.quayid ) {\n          txt_subject = txt_subject + ' - ' + quayitem.value\n          txt_body = txt_body + this.uitext.water.label_quay + ': ' + quayitem.value + '<br>'\n          break\n        }\n      }\n\n      // water - waters\n      let cworkers = []\n      for ( let i = 0; i < this._data.water.workers.length; i ++ ) {\n        let worker = this._data.water.workers[i]\n        if ( this._state.state.water.workers[i] ) {\n          cworkers.push(worker.value)\n        }\n      }\n      txt_subject = txt_subject + ' - ' + cworkers.join(', ')\n      txt_body = txt_body + this.uitext.water.label_workers + ': ' + cworkers.join(', ') + '<br>'\n\n      // water - message\n      let txtVal = this._state.state.water.message\n      txtVal = txtVal.replace(/\\r/g, '<br>')\n      txtVal = txtVal.replace(/\\n/g, '<br>')\n      txt_body = txt_body + this.uitext.water.label_message + ': ' + txtVal\n\n    }\n\n    let item = Office.context.mailbox.item\n\n    if ( item.itemType == Office.MailboxEnums.ItemType.Appointment ) {\n      item.subject.setAsync(txt_subject)\n      item.body.setAsync(txt_body, {coercionType: Office.CoercionType.Html})\n    }\n  }\n}\n","import { Injectable, Injector, NgZone } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nimport { Observable, of, BehaviorSubject } from 'rxjs'\nimport { tap } from 'rxjs/operators'\n\nimport { Crane, Water, MockEForm } from './data'\n\n// Test purpose\nimport { MockCrane, MockWater } from './mock-data'\nimport { StateService } from './state.service';\nimport { CRANET, WATERT } from './state';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  // private apiGetCrane = 'https://temp/crane/get'\n  // private apiModifyCrane = 'https://temp/crane/modify'\n  // private apiGetWater = 'https://temp/water/get'\n  // private apiModifyWater = 'https://temp/water/modify'\n\n  crane: Crane\n  water: Water\n  eform: (CRANET | WATERT)[]\n\n  observableEForm: BehaviorSubject<(CRANET | WATERT)[]>\n  observableCrane: BehaviorSubject<Crane>\n  observableWater: BehaviorSubject<Water>\n\n  constructor( private http: HttpClient, private injector: Injector, private zone: NgZone ) {\n    this.crane = undefined\n    this.water = undefined\n    this.eform = MockEForm\n    this.observableEForm = new BehaviorSubject<(CRANET | WATERT)[]>(this.eform)\n    this.observableCrane = new BehaviorSubject<Crane>(this.crane)\n    this.observableWater = new BehaviorSubject<Water>(this.water)\n  }\n\n  onEFormChange(): void {\n    this.zone.run(() => {\n      console.log('eform change event - ' + this.eform.length)\n      this.observableEForm.next(this.eform)\n    })\n  }\n\n  onCraneChange(): void {\n    this.observableCrane.next(this.crane)\n  }\n\n  onWaterChange(): void {\n    this.observableWater.next(this.water)\n  }\n\n  getCrane(): Observable<Crane> {\n    if ( this.crane == undefined ) {\n      this.fetchCrane()\n    }\n    return of(this.crane) // Test purpose\n  }\n\n  getWater(): Observable<Water> {\n    if ( this.water == undefined ) {\n      this.fetchWater()\n    }\n    return of(this.water) // Test purpose\n  }\n\n  getEform(): Observable<(CRANET | WATERT)[]> {\n    return of(this.eform)\n  }\n\n  fetchCrane() {\n    this.crane = MockCrane // Test purpose\n    const stateService = this.injector.get(StateService)\n    stateService.initCraneState(this.crane)\n    this.onCraneChange()\n    // return this.http.get<Crane>(this.apiGetCrane).pipe(\n    //   tap(c => this.crane = c)\n    // )\n  }\n\n  fetchWater() {\n    this.water = MockWater // Test purpose\n    const stateService = this.injector.get(StateService)\n    stateService.initWaterState(this.water)\n    this.onWaterChange()\n    // return this.http.get<Water>(this.apiGetWater).pipe(\n    //   tap(w => this.water = w)\n    // )\n  }\n\n  removeEFormItem(item: CRANET | WATERT) {\n    this.zone.run(() => {\n      let index = this.eform.indexOf(item)\n      if (index > -1) {\n        this.eform.splice(index, 1)\n      }\n      this.onEFormChange()\n    })\n  }\n}\n","import { CRANET, WATERT, CRANEID, WATERID } from \"./state\";\n\nexport class Crane {\n    ship: {id: string, value: string}[]\n    quay: {id: string, value: string}[]\n    crane: {id: string, value: string}[]\n    workers: {id: string, value: string}[]\n    message: string\n}\n\nexport class Water {\n    ship: {id, value}[]\n    quay: {id, value}[]\n    workers: {id, value}[]\n    message: string\n}\n\nexport const MockEForm: (CRANET | WATERT)[] = [\n    CRANEID,\n    WATERID\n]","\nexport const i18n = {\n  en: {\n    eform: {\n      label_eform: 'eForm',\n      'crane': 'Crane', /* CRANEID */\n      'water': 'Water'  /* WATERID */\n    },\n    crane: {\n      label_edit: 'Edit',\n      label_refresh: 'Refresh',\n      label_ship: 'Ship',\n      label_quay: 'Quay',\n      label_crane: 'Crane',\n      label_workers: 'Workers',\n      label_message: 'Message to Workers'\n    },\n    water: {\n      label_edit: 'Edit',\n      label_refresh: 'Refresh',\n      label_ship: 'Ship',\n      label_quay: 'Quay',\n      label_workers: 'Workers',\n      label_message: 'Message to Workers'\n    }\n  },\n  getTexts: function(locale: string) {\n    if ( locale.toLowerCase().includes('da') ) {\n      return i18n.en\n    } else {\n      return i18n.en\n    }\n  }\n}","import { Crane, Water } from './data'\n\nexport const MockCrane: Crane = {\n  ship: [{\n    id: 'ship_1',\n    value: 'ship 1'\n  },{\n    id: 'ship_2',\n    value: 'ship 2'\n  },{\n    id: 'ship_3',\n    value: 'ship 3'\n  }],\n  quay: [{\n    id: 'quay_1',\n    value: 'quay 1'\n  },{\n    id: 'quay_2',\n    value: 'quay 2'\n  },{\n    id: 'quay_3',\n    value: 'quay 3'\n  },{\n    id: 'quay_4',\n    value: 'quay 4'\n  },{\n    id: 'quay_5',\n    value: 'quay 5'\n  }],\n  crane: [{\n    id: 'crane_1',\n    value: 'crane 1'\n  },{\n    id: 'crane_2',\n    value: 'crane 2'\n  }],\n  workers: [{\n    id: 'worker_1',\n    value: 'worker 1'\n  },{\n    id: 'worker_2',\n    value: 'worker 2'\n  },{\n    id: 'worker_3',\n    value: 'worker 3'\n  },{\n    id: 'worker_4',\n    value: 'worker 4'\n  }],\n  message: ''\n}\nexport const MockWater: Water = {\n  ship: [{\n    id: 'ship_1',\n    value: 'ship 1'\n  },{\n    id: 'ship_2',\n    value: 'ship 2'\n  },{\n    id: 'ship_3',\n    value: 'ship 3'\n  }],\n  quay: [{\n    id: 'quay_1',\n    value: 'quay 1'\n  },{\n    id: 'quay_2',\n    value: 'quay 2'\n  },{\n    id: 'quay_3',\n    value: 'quay 3'\n  },{\n    id: 'quay_4',\n    value: 'quay 4'\n  },{\n    id: 'quay_5',\n    value: 'quay 5'\n  }],\n  workers: [{\n    id: 'worker_1',\n    value: 'worker 1'\n  },{\n    id: 'worker_2',\n    value: 'worker 2'\n  },{\n    id: 'worker_3',\n    value: 'worker 3'\n  },{\n    id: 'worker_4',\n    value: 'worker 4'\n  }],\n  message: ''\n}\n","import { Injectable, NgZone, Injector } from '@angular/core';\nimport { State, CraneState, WaterState, WATERID, CRANEID, CRANET, WATERT} from './state';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { Crane, Water } from './data';\nimport { i18n } from '../service/i18n';\nimport { DataService } from './data.service';\n\ndeclare const Office: any\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  state: State\n  observableEForm: BehaviorSubject<CRANET | WATERT>\n  observableCrane: BehaviorSubject<CraneState>\n  observableWater: BehaviorSubject<WaterState>\n\n  constructor(private zone: NgZone, private injector: Injector) {\n    this.state = {\n      eform: CRANEID,\n      locale: Office.context.displayLanguage,\n      crane: undefined,\n      water: undefined\n    }\n    this.observableEForm = new BehaviorSubject<CRANET | WATERT>(this.state.eform)\n    this.observableCrane = new BehaviorSubject<CraneState>(this.state.crane)\n    this.observableWater = new BehaviorSubject<WaterState>(this.state.water)\n  }\n\n  onEFormChange(): void {\n    this.observableEForm.next(this.state.eform)\n  }\n\n  onCraneChange(): void {\n    this.observableCrane.next(this.state.crane)\n  }\n\n  onWaterChange(): void {\n    this.observableWater.next(this.state.water)\n  }\n\n  getEState(): Observable<(CRANET | WATERT)> {\n    return this.observableEForm\n  }\n\n  getCraneState(): Observable<CraneState> {\n    return this.observableCrane\n  }\n\n  getWaterState(): Observable<WaterState> {\n    return this.observableWater\n  }\n\n  initCraneState(c: Crane) {\n    if ( this.state.crane == undefined ) {\n      this.state.crane = {\n        shipid: c.ship[0].id,\n        quayid: c.quay[0].id,\n        craneid: c.crane[0].id,\n        workers: Array(c.workers.length).fill(false),\n        message: c.message\n      }\n      this.parseCraneBody(c)\n    } else {\n      // regen water state -> check if current id is in new list ? preserve original id : [0].id\n    }\n  }\n\n  initWaterState(w: Water) {\n    this.zone.run(() => {\n      if ( this.state.water == undefined ) {\n        this.state.water = {\n          shipid: w.ship[0].id,\n          quayid: w.quay[0].id,\n          workers: Array(w.workers.length).fill(false),\n          message: w.message\n        }\n        this.parseWaterBody(w)\n      } else {\n        // regen water state -> check if current id is in new list ? preserve original id : [0].id\n      }\n    })\n  }\n\n  parseCraneBody(c: Crane): void {\n    let uitext = i18n.getTexts(this.state.locale)\n\n    this.zone.run(() => {\n      let item = Office.context.mailbox.item\n      if ( item.itemType == Office.MailboxEnums.ItemType.Appointment ) {\n        const __this = this\n        item.body.getAsync(Office.CoercionType.Text, function(result) {\n          if ( result.status == Office.AsyncResultStatus.Succeeded ) {\n            let txtVal: string = result.value\n            let textLines = txtVal.split( '\\n' )\n            if ( textLines[0] == '' ) {\n              textLines.shift()\n            }\n            if ( textLines[textLines.length-1] == '' ) {\n              textLines.pop()\n            }\n            let stringText = ''\n            let itemMode = false\n            for ( let i = 0; i < textLines.length; i ++ ) {\n              itemMode = false\n              const textLine = textLines[i]\n              if ( textLine.startsWith( uitext.eform.label_eform ) ) {\n                let optionValue = textLine.split( ':' )[1].trim()\n                let waterVal = uitext.eform[WATERID]\n                if ( optionValue == waterVal ) {\n                  __this.state.eform = WATERID\n                  __this.onEFormChange()\n                  itemMode = false\n                  return\n                } else {\n                  itemMode = true\n                }\n              } else if ( textLine.startsWith( uitext.crane.label_ship ) ) {\n                let optionValue = textLine.split( ':' )[1].trim()\n                for (let j = 0; j < c.ship.length; j ++) {\n                  if ( c.ship[j].value == optionValue ) {\n                    __this.state.crane.shipid = c.ship[j].id\n                    itemMode = true\n                  }\n                }\n              } else if ( textLine.startsWith( uitext.crane.label_quay ) ) {\n                let optionValue = textLine.split( ':' )[1].trim()\n                for (let j = 0; j < c.quay.length; j ++) {\n                  if ( c.quay[j].value == optionValue ) {\n                    __this.state.crane.quayid = c.quay[j].id\n                    itemMode = true\n                  }\n                }\n              } else if ( textLine.startsWith( uitext.crane.label_crane ) ) {\n                let optionValue = textLine.split( ':' )[1].trim()\n                for (let j = 0; j < c.crane.length; j ++) {\n                  if ( c.crane[j].value == optionValue ) {\n                    __this.state.crane.craneid = c.crane[j].id\n                    itemMode = true\n                  }\n                }\n              } else if ( textLine.startsWith( uitext.crane.label_workers ) ) {\n                itemMode = true\n                let optionValue = textLine.split( ':' )[1].trim()\n                let cworkers = optionValue.split(', ')\n                if ( cworkers.length > 0 ) {\n                  for (let j = 0; j < c.workers.length; j ++) {\n                    for (let k = 0; k < cworkers.length; k ++) {\n                      if ( c.workers[j].value == cworkers[k] ) {\n                        __this.state.crane.workers[j] = true\n                      }\n                    }\n                  }\n                }\n              } else if (textLine.startsWith( uitext.crane.label_message )) {\n                stringText = textLine.replace(uitext.crane.label_message + ': ', '') + '\\n'\n                itemMode = true\n              } else {\n                itemMode = true\n                stringText = stringText + textLine + '\\n'\n              }\n\n              if ( itemMode == false ) break\n            }\n\n            __this.state.crane.message = stringText\n\n            if ( itemMode == true ) {\n              const data = __this.injector.get(DataService)\n              data.removeEFormItem(WATERID)\n            }\n            __this.onCraneChange()\n          }\n        })\n      }\n    })\n  }\n\n  parseWaterBody(c: Water): void {\n    let uitext = i18n.getTexts(this.state.locale)\n\n    this.zone.run(() => {\n      let item = Office.context.mailbox.item\n      if ( item.itemType == Office.MailboxEnums.ItemType.Appointment ) {\n        const __this = this\n        item.body.getAsync(Office.CoercionType.Text, function(result) {\n          if ( result.status == Office.AsyncResultStatus.Succeeded ) {\n            let txtVal: string = result.value\n            let textLines = txtVal.split( '\\n' )\n            if ( textLines[0] == '' ) {\n              textLines.shift()\n            }\n            if ( textLines[textLines.length-1] == '' ) {\n              textLines.pop()\n            }\n            let stringText = ''\n            let itemMode = false\n            for ( let i = 0; i < textLines.length; i ++ ) {\n              itemMode = false\n              const textLine = textLines[i]\n              if ( textLine.startsWith( uitext.eform.label_eform ) ) {\n                let optionValue = textLine.split( ':' )[1].trim()\n                let craneVal = uitext.eform[CRANEID]\n                if ( optionValue == craneVal ) {\n                  return\n                } else {\n                  itemMode = true\n                }\n              } else if ( textLine.startsWith( uitext.water.label_ship ) ) {\n                let optionValue = textLine.split( ':' )[1].trim()\n                for (let j = 0; j < c.ship.length; j ++) {\n                  if ( c.ship[j].value == optionValue ) {\n                    __this.state.water.shipid = c.ship[j].id\n                    itemMode = true\n                  }\n                }\n              } else if ( textLine.startsWith( uitext.water.label_quay ) ) {\n                let optionValue = textLine.split( ':' )[1].trim()\n                for (let j = 0; j < c.quay.length; j ++) {\n                  if ( c.quay[j].value == optionValue ) {\n                    __this.state.water.quayid = c.quay[j].id\n                    itemMode = true\n                  }\n                }\n              } else if ( textLine.startsWith( uitext.water.label_workers ) ) {\n                itemMode = true\n                let optionValue = textLine.split( ':' )[1].trim()\n                let cworkers = optionValue.split(', ')\n                for (let j = 0; j < c.workers.length; j ++) {\n                  for (let k = 0; k < cworkers.length; k ++) {\n                    if ( c.workers[j].value == cworkers[k] ) {\n                      __this.state.water.workers[j] = true\n                    }\n                  }\n                }\n              } else if (textLine.startsWith( uitext.water.label_message )) {\n                stringText = textLine.replace(uitext.water.label_message + ': ', '') + '\\n'\n                itemMode = true\n              } else {\n                stringText = stringText + textLine + '\\n'\n                itemMode = true\n              }\n\n              if ( itemMode == false ) break\n            }\n\n            __this.state.water.message = stringText\n\n            if ( itemMode == true ) {\n              const data = __this.injector.get(DataService)\n              data.removeEFormItem(CRANEID)\n            }\n            __this.onWaterChange()\n          }\n        })\n      }\n    })\n  }\n\n}\n","export type CRANET = 'crane'\nexport type WATERT = 'water'\n\nexport const CRANEID = 'crane'\nexport const WATERID = 'water'\n\nexport class State {\n    eform: CRANET | WATERT\n    locale: string\n    crane: CraneState\n    water: WaterState\n}\n\nexport class CraneState {\n    shipid: string\n    quayid: string\n    craneid: string\n    workers: boolean[]\n    message: string\n}\n\nexport class WaterState {\n    shipid: string\n    quayid: string\n    workers: boolean[]\n    message: string\n}","<div class='section' *ngIf=\"state\">\n  <div class='section-header'>\n    <label>{{this.content.ship.label}}</label>\n    <div class='padding'></div>\n    <div class='link'>{{this.content.ship.label_edit}}</div>\n    <div class='link'>{{this.content.ship.label_refresh}}</div>\n  </div>\n  <select [(ngModel)]='state.shipid' >\n      <option *ngFor='let optionItem of content.ship.value'\n          [ngValue]='optionItem.id' >{{optionItem.value}}</option>\n  </select>\n</div>\n<div class='section' *ngIf=\"state\">\n  <div class='section-header'>\n    <label>{{this.content.quay.label}}</label>\n    <div class='padding'></div>\n    <div class='link'>{{this.content.quay.label_edit}}</div>\n    <div class='link'>{{this.content.quay.label_refresh}}</div>\n  </div>\n  <select [(ngModel)]='state.quayid' >\n      <option *ngFor='let optionItem of content.quay.value'\n          [ngValue]='optionItem.id' >{{optionItem.value}}</option>\n  </select>\n</div>\n<div class='section' *ngIf=\"state\">\n  <div class='section-header'>\n    <label>{{this.content.workers.label}}</label>\n    <div class='padding'></div>\n    <div class='link'>{{this.content.workers.label_edit}}</div>\n    <div class='link'>{{this.content.workers.label_refresh}}</div>\n  </div>\n  <ul>\n      <li *ngFor='let checkItem of content.workers.value; index as i'\n          (click)='onWorkers(i)' >\n          <input type='checkbox' [(ngModel)]='state.workers[i]'\n              >{{checkItem.value}}\n      </li>\n  </ul>\n</div>\n<div class='section' *ngIf=\"state\">\n  <label>{{this.content.message.label}}</label>\n  <textarea [(ngModel)]='state.message' rows=\"8\" ></textarea>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Water } from '../service/data';\nimport { DataService } from '../service/data.service';\nimport { i18n } from '../service/i18n';\nimport { StateService } from '../service/state.service';\nimport { WaterState } from '../service/state';\n\n@Component({\n  selector: 'app-water',\n  templateUrl: './water.component.html',\n  styleUrls: ['./water.component.css']\n})\nexport class WaterComponent implements OnInit {\n\n  content\n  uitext\n  state: WaterState\n\n  constructor(private zone: NgZone, public data: DataService, public _state: StateService) { }\n\n  ngOnInit() {\n    this.uitext = i18n.getTexts(this._state.state.locale)\n    this.getWater()\n    this.getState()\n  }\n\n  getState(): void {\n    this._state.getWaterState().subscribe(ws => { this.zone.run(() => {this.state = ws}) })\n  }\n\n  getWater(): void {\n    this.data.getWater().subscribe(c => {\n      this.zone.run(() => {\n        this.content = {\n          ship: {\n            label: this.uitext.water.label_ship,\n            label_edit: this.uitext.water.label_edit,\n            label_refresh: this.uitext.water.label_refresh,\n            value: c.ship\n          },\n          quay: {\n            label: this.uitext.water.label_quay,\n            label_edit: this.uitext.water.label_edit,\n            label_refresh: this.uitext.water.label_refresh,\n            value: c.quay\n          },\n          workers: {\n            label: this.uitext.water.label_workers,\n            label_edit: this.uitext.water.label_edit,\n            label_refresh: this.uitext.water.label_refresh,\n            value: c.workers\n          },\n          message: {\n            label: this.uitext.water.label_message,\n            value: c.message\n          }\n        }\n      })\n    })\n  }\n\n  onWorkers(workerIndex: number) {\n    this.state.workers[workerIndex] = !this.state.workers[workerIndex]\n  }\n}\n","export { AppServerModule } from './app/app.server.module';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"rxjs\");"],"sourceRoot":""}